name: Update AWS CDK packages

on:
  schedule:
    - cron: "0 20 * * 6" # everyday at 10am
  workflow_dispatch: {}

jobs:
  release:
    name: Publish to Github Packages
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
          registry-url: 'https://npm.pkg.github.com'
      - name: Versions
        run: |
          node --version
          npm --version
      - name: Install current dependencies
        run: |
          npm install
      - name: Stash current version
        run: |
          version=$(npm run env | grep npm_package_dependencies__aws_cdk_core | sed -e 's/^.*=[^0-9]*//')
          echo "CDK_VERSION_CURRENT=${version}" >> $GITHUB_ENV
      - name: Update AWS CDK dependencies
        run: |
          npx update-by-scope @aws-cdk npm install
      - name: Test with updated dependencies
        run: |
          npm run test
      - name: Stash new version
        run: |
          version=$(npm run env | grep npm_package_dependencies__aws_cdk_core | sed -e 's/^.*=[^0-9]*//')
          echo "CDK_VERSION_NEW=${version}" >> $GITHUB_ENV
      - name: No Update Required
        if: env.CDK_VERSION_CURRENT == env.CDK_VERSION_NEW
        run: |
          echo "Doing nothing, current version ${STATE_currentVersion} is still the latest"
      - name: Configure Github access
        if: env.CDK_VERSION_CURRENT != env.CDK_VERSION_NEW
        run: |
          set -e
          cat >>~/.netrc <<EOF
          machine github.com
            login $GITHUB_ACTOR
            password $GITHUB_TOKEN
          EOF
      - name: Configure Github Persona
        if: env.CDK_VERSION_CURRENT != env.CDK_VERSION_NEW
        run: |
          set -e
          git config --global user.name 'Github Actions'
          git config --global user.email 'ukautz@users.noreply.github.com'
      - name: Bump package version in new branch
        if: env.CDK_VERSION_CURRENT != env.CDK_VERSION_NEW
        run: |
          set -ex

          # set new package version
          echo "::set-output name=takenAction::update from ${STATE_currentVersion} to ${STATE_newVersion}"

          # replace own version with alpha referencing latest
          sed -i -e 's/"version": "[^"]*",/"version": "'${STATE_newVersion}'-alpha1",/' package.json

          # replace all dependencies with pinned to new
          sed -i -e 's/"^*'${STATE_currentVersion}'"/"'${STATE_newVersion}'"/g' package.json

          # add to branch & commit
          git checkout -b chore/aws-cdk-upgrade-${STATE_newVersion}
          git add package.json package-lock.json
          git commit -m "AWS CDK package update"
      - name: Create PR on Github
        if: env.CDK_VERSION_CURRENT != env.CDK_VERSION_NEW
        run: |
          set -ex
          git push origin chore/aws-cdk-upgrade-${STATE_newVersion}
          hub pull-request -m "Update AWS CDK from ${STATE_currentVersion} to ${STATE_newVersion}" -l chore,aws-cdk-update

